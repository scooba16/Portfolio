/* autogenerated by Processing revision 1286 on 2025-10-14 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class Calculator extends PApplet {

// Miles Barua | September 25th | Calculator
Button[] buttons = new Button[12];
Button[] numButtons = new Button[10];
float l, r, result;
boolean left;
String dVal;
String op;

 public void setup() {
  /* size commented out by preprocessor */;
  background(0);
  left = true;
  l = 0.0f;
  r = 0.0f;
  result = 0.0f;
  dVal = "0.0";
  op = "";





  buttons[0] = new Button(40, 73, 50, 105, "C", 0xFFC30202, 0xFFFF7E7E, true);
  numButtons[0] = new Button(68, 320, 105, 50, "0", 0, 200, true);
  buttons[1] = new Button(260, 45, 50, 50, "±", 0, 200, true);
  numButtons[1] = new Button(40, 155, 50, 50, "1", 0, 200, true);
  numButtons[2] = new Button(95, 155, 50, 50, "2", 0, 200, true);
  numButtons[3] = new Button(150, 155, 50, 50, "3", 0, 200, true);
  numButtons[4] = new Button(40, 210, 50, 50, "4", 0, 200, true);
  numButtons[5] = new Button(95, 210, 50, 50, "5", 0, 200, true);
  numButtons[6] = new Button(150, 210, 50, 50, "6", 0, 200, true);
  numButtons[7] = new Button(40, 265, 50, 50, "7", 0, 200, true);
  numButtons[8] = new Button(95, 265, 50, 50, "8", 0, 200, true);
  numButtons[9] = new Button(150, 265, 50, 50, "9", 0, 200, true);
  buttons[2] = new Button(205, 45, 50, 50, "x²", 0, 200, true);
  buttons[3] = new Button(150, 45, 50, 50, "^", 0, 200, true);
  buttons[4] = new Button(95, 45, 50, 50, "√", 0, 200, true);
  buttons[5] = new Button(260, 128, 50, 105, "+", 0, 200, true);
  buttons[6] = new Button(205, 128, 50, 105, "×", 0, 200, true);
  buttons[7] = new Button(205, 238, 50, 105, "÷", 0, 200, true);
  buttons[8] = new Button(260, 238, 50, 105, "-", 0, 200, true);
  buttons[9] = new Button(205, 320, 160, 50, "=", 0, 200, true);
  buttons[10] = new Button(150, 100, 50, 50, ".", 0, 200, true);
  buttons[11] = new Button(95, 100, 50, 50, "π", 0, 200, true);
}

 public void draw() {
  background(200);
  
  for (int i=0; i<buttons.length; i++) {
    buttons[i].display();
    buttons[i].hover(mouseX, mouseY);
  }
  for (int i=0; i<numButtons.length; i++) {
    numButtons[i].display();
    numButtons[i].hover(mouseX, mouseY);
  }
 
  updateDisplay();
}
 public void mousePressed() {
  for (int i = 0; i<buttons.length; i++) {
    if (buttons[i].hover && buttons[i].val.equals("+")) {
      left = false;
      op = "+";
      dVal = "0.0";
    } else if (buttons[i].hover && buttons[i].val.equals(".")){ 
     if(dVal.contains(".") == false){
       dVal += ".";
     }
    } else if (buttons[i].hover && buttons[i].val.equals("=")) {
      performCalculation();
      dVal = str(result);
    } else if (buttons[i].hover && buttons[i].val.equals("x²")) {
      if (left) {
        l = sq(l);
        dVal = str(l);
      } else {
        r = sq(r);
        dVal = str(r);
      }
    } else if (buttons[i].hover && buttons[i].val.equals("π")) {
      if (left) {
        l = PI;
        dVal = str(l);
      } else {
        r = PI;
        dVal = str(r);
      }
    } else if (buttons[i].hover && buttons[i].val.equals("√")) {
      if (left) {
        l = sqrt(l);
        dVal = str(l);
      } else {
        r = sqrt(r);
        dVal = str(r);
      } 
    } else if (buttons[i].hover && buttons[i].val.equals("±")) {
      if (left) {
        l = -l;
        dVal = str(l);
      } else {
        r = -r;
        dVal = str(r);
      }
    } else if (buttons[i].hover && buttons[i].val.equals("-")) {
      left = false;
      op = "-";
      dVal = "0.0";
    } else if (buttons[i].hover && buttons[i].val.equals("×")) {
      left = false;
      op = "×";
      dVal = "0.0";
    } else if (buttons[i].hover && buttons[i].val.equals("÷")) {
      left = false;
      op = "/";
      dVal = "0.0";
    } else if (buttons[i].hover && buttons[i].val.equals("^")) {
      left = false;
      op = "^";
      dVal = "0.0";
    } else if (buttons[i].hover && buttons[i].val.equals("C")) {
      left = true;
      l = 0.0f;
      r = 0.0f;
      result = 0.0f;
      dVal = "0.0";
      op = "";
    }
  }
// if the number is too big it will stop printing new numbers
if (dVal.length()<24){
  for (int i = 0; i<numButtons.length; i++) {
    if (numButtons[i].hover && left) {
      if (dVal.equals("0.0")) {
        dVal = (numButtons[i].val);
        l = PApplet.parseFloat(dVal);
      } else {
        dVal += (numButtons[i].val);
        l = PApplet.parseFloat(dVal);
      }
    } else if (numButtons[i].hover && !left) {
      if (dVal.equals("0.0")) {
        dVal = (numButtons[i].val);
        r = PApplet.parseFloat(dVal);
      } else {
        dVal += (numButtons[i].val);
        r = PApplet.parseFloat(dVal);
      }
    }
  }
}
  println("L:" + l);
  println("R:" + r);
  println("Result:" + result);
  println("Left:" + left);
  println("Op:" + op);
}

 public void updateDisplay() {
  rectMode(CENTER);
  fill(255);
  rect(150, 370, 270, 35);
  fill(0);
  textSize(40);
  textAlign(RIGHT);
  if(dVal.length()>13) {
    textSize(35);
  } if (dVal.length()>15){
     textSize(31);
  } if (dVal.length()>17){
     textSize(28);
  } if (dVal.length()>19){
     textSize(25);
  }if (dVal.length()>21){
     textSize(23);
  }if (dVal.length()>23){
     textSize(22); 
  }
  text(dVal, width-17, 382);
   
}

 public void performCalculation() {
  if (op.equals("+")) {
    result = l + r;
  } else if (op.equals("-")) {
    result = l - r;
  } else if (op.equals("×")) {
    result = l * r;
  } else if (op.equals("÷")) {
    result = l / r;
  } else if (op.equals("^")) {
    result = pow(l, r);
  }
  left = true;
  l = result;
}
class Button {
  // Member variables
  int x,y,w,h;
  String val;
  boolean hover,isRect;
  int c1, c2;
  
  // Constructor
  Button(int x, int y, int w, int h, String val, int c1, int c2, boolean isRect) {
    this.x = x;
    this.y = y;
    this.w = w;
    this.h = h;
    this.val = val;
    hover = false;
    this.isRect = isRect;
    this.c1 = c1;
    this.c2 = c2;
  }
  
  // Member Methods
   public void display() {
    // Rectangle properties
     rectMode(CENTER);
     if (hover == true){
       fill(c2);
     }  else {
       fill(c1);
     } 
     if (isRect == true){
       rect(x,y,w,h, 5);
     } else {
       ellipse(x,y,w,h);
     }
     
    // Text properties
     fill(255);
     textAlign(CENTER, CENTER);
     textSize(30);
     text(val,x,y-5);
  }
 
  
     public void hover(int tempX, int tempY) {
      if (x>tempX - w/2 && x<tempX + w/2 && y>tempY - h/2 && y<tempY + h/2) {
        hover = true;
      } else {
        hover = false; 
         
      }
    
  }
  
}


  public void settings() { size(300, 400); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "Calculator" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
